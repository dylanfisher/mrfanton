//
//  Mixins
//

@mixin gutters {
  padding-left: $gutter;
  padding-right: $gutter;
}

// Breakpoints
// Usage:
// @include breakpoint(sm) {
//   display: none;
// }

@mixin breakpoint($class) {
  @if $class == xs {
    @media (max-width: $breakpoint-small - 1) { @content; }
  }

  @else if $class == sm {
    @media (min-width: $breakpoint-small) { @content; }
  }

  @else if $class == md {
    @media (min-width: $breakpoint-medium) { @content; }
  }

  @else if $class == lg {
    @media (min-width: $breakpoint-large) { @content; }
  }

  @else {
    @warn "Breakpoint mixin supports: xs, sm, md, lg";
  }
}

// The Ultimate PX/REM Mixin
// http://hugogiraudel.com/2013/03/18/ultimate-rem-mixin/

@function parseInt($n) {
  @return $n / ($n * 0 + 1);
}

@mixin rem($property, $values) {
  $px : ();
  $rem: ();

  @each $value in $values {

    @if $value == 0 or $value == auto {
      $px : append($px , $value);
      $rem: append($rem, $value);
    }

    @else {
      $unit: unit($value);
      $val: parseInt($value);

      @if $unit == "px" {
        $px : append($px,  $value);
        $rem: append($rem, ($val / 10 + rem));
      }

      @if $unit == "rem" {
        $px : append($px,  ($val * 10 + px));
        $rem: append($rem, $value);
      }
    }
  }

  @if $px == $rem {
    #{$property}: $px;
  } @else {
    #{$property}: $px;
    #{$property}: $rem;
  }
}

@mixin single-project {
  .information-link-wrapper,
  .home__post-title-wrapper:not(.active) {
    display: none;
  }

  .nav-col {
    width: 100% !important;
  }

  .home__post-image {
    position: absolute;
  }

  .home__post-title-wrapper--grid.active {
    position: absolute;
    width: 100% !important;
    top: 0;
    // left: -$gutter;
    left: 0;

    .home__post-image--grid {
      opacity: 1;
    }
  }

  .home__post-grid-image {
    opacity: 0;
  }

  .controls,
  .ajax-wrapper {
    display: block;
  }
}

@mixin col-offset($offset-num) {
  $col-size: 100/6;
  $offset: $col-size * $offset-num - $col-size;
}
